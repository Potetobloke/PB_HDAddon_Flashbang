//thank you jarewill for making flashbangs work

//GRENADE
const FLASHBANG_STUNAMT=196;
const FLASHBANG_DIST=384;

class HDFlashbangRoller:HDFragGrenadeRoller{
	//int fuze;
	int gasamount;
	int gotkicked;
	
	HDMobBase hmb;
	
	default{
			bouncetype "doom";bouncesound "misc/fragknock";
		radius 2;height 2;damagetype "none";
		scale 0.23;
		obituary "%o was flashed by %k.";
		radiusdamagefactor 0.04;pushfactor 1.4;maxstepheight 2;
		mass 25;
	}
	
	/*override bool used(actor user){
		angle=user.angle;
		A_StartSound(bouncesound);
		if(hdplayerpawn(user)&&hdplayerpawn(user).incapacitated)A_ChangeVelocity(4,0,1,CVF_RELATIVE);
		else A_ChangeVelocity(12,0,4,CVF_RELATIVE);
		
		if(gasamount>=450&&gotkicked<=0)
		{A_StartSound("weapons/grenade/gas/end",CHAN_6,CHANF_OVERLAP,0.25
		,pitch:frandom(1.75,2.25));}
		return true;
	}*/
	
	states{
	
	spawn:
		FBG1 A 0 nodelay{
			//HDMobAI.Frighten(self,512);
		}
	spawn2:
		#### AAA 2{
			if(abs(vel.z-keeprolling.z)>10)A_StartSound("misc/fragknock",CHAN_BODY);
			else if(floorz>=pos.z)A_StartSound("misc/fragroll");
			keeprolling=vel;
			if(abs(vel.x)<0.4 && abs(vel.y)<0.4) setstatelabel("death");
		}loop;
	bounce:
		---- A 0{
			bmissile=false;
			vel*=0.23;
		}goto spawn2;
	death:
		---- A 2{
			if(abs(vel.z-keeprolling.z)>3){
				A_StartSound("misc/fragknock",CHAN_BODY);
				keeprolling=vel;
			}
			if(abs(vel.x)>0.4 || abs(vel.y)>0.4) setstatelabel("spawn");
		}wait;
		
	nomore:
		---- A 0 A_StopSound(CHAN_WEAPON);
		/*---- A 1 {
		bsolid=false;bpushable=false;bmissile=false;bnointeraction=true;bshootable=false;
		}*/
		---- A 1 A_Fadeout(0.01);
		loop;
	}
	override void tick(){
	
		if(fuze>55){
			keeprolling=vel;
			hdactor.tick();
		}

		if(isfrozen())return;
		else if(bnointeraction){
			//nexttic
			if(CheckNoDelay()){
				if(tics>0)tics--;  
				while(!tics){
					if(!SetState(CurState.NextState)){
						return;
					}
				}
			}
			return;
		}else{
			fuze++;
			if(fuze>=55){
			
			if(gasamount<=0){
			
				gasamount++;
				A_StartSound("pb/flashbang/explode",CHAN_7,CHANF_OVERLAP,0.95,0.65);
				A_HDBlast(FLASHBANG_DIST,2,FLASHBANG_DIST/2,"bashing",8,8);
				A_AlertMonsters(1024);
				vel.z++;
				//A_Blast(0,255,4,90);
			
			
			for(int i=0;i<6;i++){
				let fls=spawn("HDFlashbangLight",pos);
				fls.target=self;
				let smk=spawn("HDFlashbangSmoke",pos);
				smk.scalex=2.5;smk.scaley=2.5;
			}
			
				For(let ccc = BlockThingsIterator.Create(self,FLASHBANG_DIST); ccc.Next();){
					If(!ccc.thing||Distance3D(ccc.thing)>FLASHBANG_DIST||!ccc.thing.CheckSight(self)){Continue;}
					
					//this shit has caused me a headache
					//thank you renegade4339 for solving this issue
					let plr = HDPlayerPawn(ccc.thing);
					let mob = HDMobBase(ccc.thing);
					
					If(ccc.thing.bISMONSTER&&ccc.thing.health>0)
					{
						let mob = HDMobBase(ccc.thing);
						
						If(ccc.thing is "HDMobBase")
						{
							target=mob;
							If(ccc.thing.FindState("Pain")){ccc.thing.SetStateLabel("Pain");}
							mob.stunned+=FLASHBANG_STUNAMT;	
						}
						
						If(ccc.thing is "Babuin")
						{
							let bab = Babuin(ccc.thing);
							target=mob;
							bab.SetStateLabel("Pain");
							bab.latchtarget=null;
							bab.stunned+=FLASHBANG_STUNAMT*1.5;//fuck you!!!!
						}
				
					}
					
					Else If(ccc.thing is "HDPlayerPawn"){
						target=plr;
						//plr.A_StartSound("world/rocketfar",300,CHANF_LOCAL,pitch:0.5);
					
						If(CheckIfInTargetLOS(135)){
							plr.A_SetBlend("00 00 00",1,192,"00 00 00",0);
							plr.A_SetBlend("ff ff ff",0.5,2,"ff ff ff",0.0);
							plr.A_SetAngle(plr.angle+frandom[flashx](-15,15));
							plr.A_SetPitch(plr.pitch+frandom[flashy](-15,15));
							plr.stunned+=128;
						}else
						{
							plr.A_SetBlend("00 00 00",0.3,8,"00 00 00",0);
							plr.stunned+=8;
						}
					}
				}
			}
				
				if(CheckNoDelay()){
					if(tics>0)tics--;  
					while(!tics){
						if(!SetState(CurState.NextState)){
							return;
						}
					}
				}
				return;
			}else hdactor.tick();
		}
	}
}

class HDFlashbangThrown:HDFragGrenade{

	int gasamount;
	
	default{
		+ROLLSPRITE
		+ROLLCENTER
		scale 0.23;
		obituary "%o was flashed by %k.";
		hdfraggrenade.rollertype "HDFlashbangRoller";
		mass 25;
	}
	
	override void tick(){ //not redefining this causes a crash
		ClearInterpolation();
		if(isfrozen())return;
		if(!bmissile){
			hdactor.tick();return;
		}else if(fuze<55){
			fuze++;
			keeprolling=vel;
			hdactor.tick(); 
			
		}else{
			if(inthesky){
				A_SpawnChunksFrags();
				destroy();return;
			}
			
			keeprolling=vel;
			hdactor.tick();
			
			if(gasamount<=0){
			
				gasamount++;
				A_StartSound("pb/flashbang/explode",CHAN_7,CHANF_OVERLAP,0.95,0.65);
				A_HDBlast(FLASHBANG_DIST,2,FLASHBANG_DIST/2,"bashing",8,8);
				A_AlertMonsters(1024);
				vel.z++;
				//A_Blast(0,255,4,90);
			
			
			for(int i=0;i<6;i++){
				let fls=spawn("HDFlashbangLight",pos);
				fls.target=self;
				let smk=spawn("HDFlashbangSmoke",pos);
				smk.scalex=2.5;smk.scaley=2.5;
			}
			
				For(let ccc = BlockThingsIterator.Create(self,FLASHBANG_DIST); ccc.Next();){
					If(!ccc.thing||Distance3D(ccc.thing)>FLASHBANG_DIST||!ccc.thing.CheckSight(self)){Continue;}
					
					//this shit has caused me a headache
					//thank you renegade4339 for solving this issue
					let plr = HDPlayerPawn(ccc.thing);
					let mob = HDMobBase(ccc.thing);
					
					//should ignore big enemies like cyberdemons
					If(ccc.thing.bISMONSTER&&!ccc.thing.bBOSS&&ccc.thing.health>0)
					{
						let mob = HDMobBase(ccc.thing);
						
						If(ccc.thing is "HDMobBase")
						{
							target=mob;
							If(ccc.thing.FindState("Pain")){ccc.thing.SetStateLabel("Pain");}
							mob.stunned+=FLASHBANG_STUNAMT;	
							
								/*switch(ccc.thing.GetClassName())
								{
									case 'Hatchling':
									case 'FlyingSkull':
										mob.latched=null;
									break;
								}*/
						}
					
						
						If(ccc.thing is "Babuin")
						{
							let bab = Babuin(ccc.thing);
							target=mob;
							bab.SetStateLabel("Pain");
							bab.latchtarget=null;
							bab.stunned+=FLASHBANG_STUNAMT*1.5;//fuck you!!!!
						}
				
					}
					
					Else If(ccc.thing is "HDPlayerPawn"){
						target=plr;
						//plr.A_StartSound("world/rocketfar",300,CHANF_LOCAL,pitch:0.5);
					
						If(CheckIfInTargetLOS(135)){
							plr.A_SetBlend("00 00 00",1,192,"00 00 00",0);
							plr.A_SetBlend("ff ff ff",0.5,2,"ff ff ff",0.0);
							plr.A_SetAngle(plr.angle+frandom[flashx](-15,15));
							plr.A_SetPitch(plr.pitch+frandom[flashy](-15,15));
							plr.stunned+=128;
						}else
						{
							plr.A_SetBlend("00 00 00",0.3,8,"00 00 00",0);
							plr.stunned+=8;
						}
					}
				}
			}
		}
	}
	
	states
	{
	spawn:
		FBG3 ABCDEFGH 2 A_SetRoll(frandom(-15.5, 15.5));
		loop;
		
	death:
		TNT1 A 2{
			bmissile=false;
			let fbn=HDFlashbangRoller(spawn(rollertype,self.pos,ALLOW_REPLACE));
			if(!fbn)return;
			fbn.target=self.target;fbn.master=self.master;
			fbn.fuze=self.fuze;
			fbn.gasamount=self.gasamount;
			fbn.vel=self.keeprolling;
			fbn.keeprolling=self.keeprolling;
			fbn.A_StartSound("misc/fragknock",CHAN_BODY);
			//HDMobAI.Frighten(fbn,FLASHBANG_DIST);
		}stop;
	}
}

class HDFlashbangLight:PointLightAdditive{
	default{
		stamina 512; //dist
	}
	override void postbeginplay(){
		super.postbeginplay();
		args[0]=256;
		args[1]=256;
		args[2]=256;
		args[3]=stamina;
		args[4]=0;
	}
	override void tick(){
		args[3]=int(frandom(0.3,0.4)*args[3]);
		if(args[3]<1)destroy();
	}
}

class HDFlashbangSmoke:HDSmoke
{
	default{
	renderstyle "add";
	}
}
